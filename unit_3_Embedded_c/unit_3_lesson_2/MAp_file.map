
Allocating common symbols
Common symbol       size              file

bss                 0x64              app.o

Memory Configuration

Name             Origin             Length             Attributes
Mem              0x00000000         0x08000000         xrw
*default*        0x00000000         0xffffffff

Linker script and memory map

                0x00010000                . = 0x10000

.reset          0x00010000       0x10
 startup.o(.text)
 .text          0x00010000       0x10 startup.o
                0x00010000                reset

.text           0x00010010       0x68
 *(.text)
 .text          0x00010010       0x18 app.o
                0x00010010                main
 .text          0x00010028       0x50 uart.o
                0x00010028                uart_send_string

.glue_7         0x00010078        0x0
 .glue_7        0x00000000        0x0 linker stubs

.glue_7t        0x00010078        0x0
 .glue_7t       0x00000000        0x0 linker stubs

.vfp11_veneer   0x00010078        0x0
 .vfp11_veneer  0x00000000        0x0 linker stubs

.v4_bx          0x00010078        0x0
 .v4_bx         0x00000000        0x0 linker stubs

.iplt           0x00010078        0x0
 .iplt          0x00000000        0x0 startup.o

.data           0x00010078       0x20
 *(.data)
 .data          0x00010078        0x0 startup.o
 .data          0x00010078       0x20 app.o
                0x00010078                name
 .data          0x00010098        0x0 uart.o

.igot.plt       0x00010098        0x0
 .igot.plt      0x00000000        0x0 startup.o

.bss            0x00010098       0x64
 *(.bss)
 .bss           0x00010098        0x0 startup.o
 .bss           0x00010098        0x0 app.o
 .bss           0x00010098        0x0 uart.o
 *(COMMON)
 COMMON         0x00010098       0x64 app.o
                0x00010098                bss

.rodata         0x000100fc        0x1
 *(.rodata)
 .rodata        0x000100fc        0x1 app.o
                0x000100fc                rod_variable
                0x000200fd                . = (. + 0x10000)
                0x000200fd                Stack_top = .
LOAD app.o
LOAD uart.o
LOAD startup.o
OUTPUT(Learn-in-depth.elf elf32-littlearm)

.rel.dyn        0x00010100        0x0 load address 0x00020100
 .rel.iplt      0x00000000        0x0 startup.o

.ARM.attributes
                0x00000000       0x2e
 .ARM.attributes
                0x00000000       0x14 startup.o
 .ARM.attributes
                0x00000014       0x32 app.o
 .ARM.attributes
                0x00000046       0x32 uart.o

.comment        0x00000000       0x11
 .comment       0x00000000       0x11 app.o
                                 0x12 (size before relaxing)
 .comment       0x00000000       0x12 uart.o
